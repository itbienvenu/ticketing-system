"""update schedule table to use bus_id and route_segment_id

Revision ID: c03d67cbbcfc
Revises: 2f2287a7dcbd
Create Date: 2025-09-07 16:22:20.411887

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c03d67cbbcfc'
down_revision: Union[str, Sequence[str], None] = '2f2287a7dcbd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('bus_stations', 'company_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.alter_column('routes', 'origin',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('routes', 'destination',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('routes', 'price',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
    op.create_foreign_key(None, 'routes', 'bus_stations', ['origin'], ['id'])
    op.create_foreign_key(None, 'routes', 'bus_stations', ['destination'], ['id'])
    op.drop_column('routes', 'updated_at')
    op.add_column('schedules', sa.Column('bus_id', sa.String(), nullable=True))
    op.alter_column('schedules', 'route_segment_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('schedules', 'company_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_foreign_key(None, 'schedules', 'buses', ['bus_id'], ['id'])
    op.create_foreign_key(None, 'schedules', 'route_segments', ['route_segment_id'], ['id'])
    op.drop_constraint(op.f('tickets_route_id_fkey'), 'tickets', type_='foreignkey')
    op.drop_column('tickets', 'mode')
    op.drop_column('tickets', 'route_id')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.add_column('tickets', sa.Column('route_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('tickets', sa.Column('mode', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('tickets_route_id_fkey'), 'tickets', 'routes', ['route_id'], ['id'])
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.alter_column('schedules', 'company_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('schedules', 'route_segment_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('schedules', 'bus_id')
    op.add_column('routes', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'routes', type_='foreignkey')
    op.drop_constraint(None, 'routes', type_='foreignkey')
    op.alter_column('routes', 'price',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('routes', 'destination',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('routes', 'origin',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.alter_column('bus_stations', 'company_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
